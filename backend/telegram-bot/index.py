import os
import json
from typing import Dict, Any

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: Telegram bot webhook handler –¥–ª—è Mini App
    Args: event - webhook update –æ—Ç Telegram
    Returns: HTTP response –¥–ª—è Telegram
    '''
    method: str = event.get('httpMethod', 'POST')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': ''
        }
    
    if method == 'POST':
        body_data = json.loads(event.get('body', '{}'))
        message = body_data.get('message', {})
        callback_query = body_data.get('callback_query', {})
        
        chat_id = message.get('chat', {}).get('id') or callback_query.get('message', {}).get('chat', {}).get('id')
        text = message.get('text', '')
        callback_data = callback_query.get('data', '')
        
        bot_token = os.environ.get('TELEGRAM_BOT_TOKEN', '')
        web_app_url = 'https://alpha-card-project--preview.poehali.dev/'
        
        if text == '/start' and chat_id and bot_token:
            response_text = (
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞!\n\n"
                "üéÅ –ü–æ–ª—É—á–∏—Ç–µ 1000‚ÇΩ –±–æ–Ω—É—Å–æ–º –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã\n"
                "üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ 200‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞\n\n"
                "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å! üëá"
            )
            
            import urllib.request
            
            keyboard = {
                'inline_keyboard': [
                    [{
                        'text': 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                        'web_app': {'url': web_app_url}
                    }],
                    [
                        {
                            'text': 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∫–∞—Ä—Ç—É',
                            'web_app': {'url': f'{web_app_url}?page=card-order'}
                        },
                        {
                            'text': 'üí∞ –ë–∞–ª–∞–Ω—Å',
                            'web_app': {'url': web_app_url}
                        }
                    ],
                    [
                        {
                            'text': 'üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞',
                            'web_app': {'url': f'{web_app_url}?page=referral'}
                        },
                        {
                            'text': 'üí∏ –í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏',
                            'web_app': {'url': f'{web_app_url}?page=withdraw'}
                        }
                    ],
                    [{
                        'text': '‚ùì –ü–æ–º–æ—â—å',
                        'web_app': {'url': f'{web_app_url}?page=support'}
                    }]
                ]
            }
            
            send_data = {
                'chat_id': chat_id,
                'text': response_text,
                'reply_markup': keyboard
            }
            
            send_url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
            req_data = json.dumps(send_data).encode('utf-8')
            req = urllib.request.Request(
                send_url,
                data=req_data,
                headers={'Content-Type': 'application/json'}
            )
            
            try:
                with urllib.request.urlopen(req) as response:
                    response.read()
            except Exception:
                pass
        
        if callback_data and chat_id and bot_token:
            import urllib.request
            
            response_texts = {
                'order_card': (
                    "üí≥ *–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞*\n\n"
                    "üéÅ –ü–æ–ª—É—á–∏—Ç–µ 1000‚ÇΩ –±–æ–Ω—É—Å–æ–º:\n"
                    "‚Ä¢ 500‚ÇΩ –æ—Ç –Ω–∞—Å\n"
                    "‚Ä¢ 500‚ÇΩ –æ—Ç –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞\n\n"
                    "üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
                    "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://alfa.me/ASQWHN\n"
                    "2. –û—Ñ–æ—Ä–º–∏—Ç–µ –∫–∞—Ä—Ç—É\n"
                    "3. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n"
                    "4. –°–æ–≤–µ—Ä—à–∏—Ç–µ –ø–æ–∫—É–ø–∫—É –æ—Ç 200‚ÇΩ\n"
                    "5. –ü—Ä–∏—à–ª–∏—Ç–µ —á–µ–∫ –≤ @Alfa_Bank778\n\n"
                    "‚ú® –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –∫—ç—à–±—ç–∫!"
                ),
                'balance': (
                    "üí∞ *–í–∞—à –±–∞–ª–∞–Ω—Å*\n\n"
                    "–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *0 ‚ÇΩ*\n\n"
                    "–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:\n"
                    "‚Ä¢ –û—Ñ–æ—Ä–º–∏—Ç–µ –∫–∞—Ä—Ç—É –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞ (+500‚ÇΩ)\n"
                    "‚Ä¢ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π (+200‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ)"
                ),
                'referral': (
                    "üë• *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞*\n\n"
                    "üí∏ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ 200‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞!\n\n"
                    "–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
                    "`https://alfacard.promo/ref/ABC123`\n\n"
                    "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n"
                    "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥—Ä—É–≥—É\n"
                    "2. –î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –∏ –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∫–∞—Ä—Ç—É\n"
                    "3. –í—ã –æ–±–∞ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å—ã!\n\n"
                    "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: *0*"
                ),
                'withdraw': (
                    "üí∏ *–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤*\n\n"
                    "–î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: *0 ‚ÇΩ*\n\n"
                    "–í—ã–≤–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –°–ë–ü (–°–∏—Å—Ç–µ–º—É –ë—ã—Å—Ç—Ä—ã—Ö –ü–ª–∞—Ç–µ–∂–µ–π) "
                    "–Ω–∞ –ª—é–±–æ–π –±–∞–Ω–∫ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏.\n\n"
                    "–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥."
                ),
                'help': (
                    "‚ùì *–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n"
                    "üì± Telegram: @Alfa_Bank778\n"
                    "üìß Email: support@alfacard.promo\n\n"
                    "üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:\n"
                    "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 21:00 (–ú–°–ö)\n\n"
                    "–ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º!"
                )
            }
            
            response_text = response_texts.get(callback_data, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')
            
            send_data = {
                'chat_id': chat_id,
                'text': response_text,
                'parse_mode': 'Markdown'
            }
            
            if callback_data == 'order_card':
                send_data['reply_markup'] = {
                    'inline_keyboard': [[
                        {
                            'text': 'üîó –û—Ñ–æ—Ä–º–∏—Ç—å –∫–∞—Ä—Ç—É',
                            'url': 'https://alfa.me/ASQWHN'
                        }
                    ]]
                }
            
            send_url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
            req_data = json.dumps(send_data).encode('utf-8')
            req = urllib.request.Request(
                send_url,
                data=req_data,
                headers={'Content-Type': 'application/json'}
            )
            
            try:
                with urllib.request.urlopen(req) as response:
                    response.read()
            except Exception:
                pass
            
            if callback_query.get('id'):
                answer_url = f'https://api.telegram.org/bot{bot_token}/answerCallbackQuery'
                answer_data = json.dumps({'callback_query_id': callback_query['id']}).encode('utf-8')
                answer_req = urllib.request.Request(
                    answer_url,
                    data=answer_data,
                    headers={'Content-Type': 'application/json'}
                )
                try:
                    with urllib.request.urlopen(answer_req) as response:
                        response.read()
                except Exception:
                    pass
        
        return {
            'statusCode': 200,
            'headers': {'Content-Type': 'application/json'},
            'isBase64Encoded': False,
            'body': json.dumps({'ok': True})
        }
    
    return {
        'statusCode': 405,
        'headers': {'Content-Type': 'application/json'},
        'isBase64Encoded': False,
        'body': json.dumps({'error': 'Method not allowed'})
    }